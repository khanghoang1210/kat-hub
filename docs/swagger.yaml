basePath: /api/v1
definitions:
  requests.CreatePostReq:
    properties:
      textContent:
        type: string
    type: object
  requests.CreateUserReq:
    properties:
      confirmPassword:
        type: string
      email:
        type: string
      fullName:
        type: string
      password:
        type: string
      userName:
        type: string
    required:
    - confirmPassword
    - email
    - fullName
    - password
    - userName
    type: object
  requests.LoginReq:
    properties:
      password:
        type: string
      userName:
        type: string
    required:
    - password
    - userName
    type: object
  requests.UpdateUserReq:
    properties:
      email:
        type: string
      fullName:
        type: string
      gender:
        type: string
      userName:
        type: string
    required:
    - userName
    type: object
  responses.ResponseData:
    properties:
      data: {}
      message:
        type: string
      statusCode:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Kathub API
  title: Kathub API
  version: "1.0"
paths:
  /accounts/login:
    post:
      parameters:
      - description: Accounts
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseData'
      summary: Login
      tags:
      - accounts
  /posts:
    delete:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseData'
      summary: Delete Post
      tags:
      - Posts
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseData'
      summary: Get All Posts
      tags:
      - Posts
    post:
      parameters:
      - description: Posts
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.CreatePostReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseData'
      summary: Create Posts
      tags:
      - Posts
    put:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Posts
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.CreatePostReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseData'
      summary: Update Post
      tags:
      - Posts
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseData'
      summary: Get All Users
      tags:
      - users
    post:
      parameters:
      - description: Users
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.CreateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseData'
      summary: Create Users
      tags:
      - users
    put:
      parameters:
      - description: Users
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseData'
      summary: Update Users
      tags:
      - users
swagger: "2.0"
